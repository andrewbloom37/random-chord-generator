{"version":3,"sources":["components/styled/styled-inputs.tsx","components/Input.tsx","components/styled/styled-tables.tsx","components/styled/styled-buttons.tsx","components/ChordQualities.tsx","components/styled/styled-expandable.tsx","components/Expandable.tsx","components/ChanceToPlay.tsx","components/ChordInfo.tsx","lib/translate-notes.ts","lib/generate-chords.ts","lib/chord-calculator.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["StyledInput","styled","input","_templateObject","Input","props","react_default","a","createElement","disabled","min","max","onChange","e","update","Number","target","value","step","type","ChanceTable","table","styled_tables_templateObject","ChanceRow","tr","_templateObject2","ChanceHeader","h4","_templateObject3","SettingsBreak","hr","_templateObject4","StyledButton","button","styled_buttons_templateObject","ExpandableButton","styled_buttons_templateObject2","initialState","m3","M3","P4","d5","P5","A5","T6","m7","M7","b9","T9","s9","b9s9","T11","s11","b13","T13","hash","v4","ChordQualities","state","handleReset","_this","setState","prevState","updateQualities","_ref","this","_this$state","third","fifth","seventh","ninth","eleventh","thirteenth","_this2","_this$state2","rowSpan","components_Input","v","Object","objectSpread","onClick","React","Component","StyledExpandable","div","styled_expandable_templateObject","collapsed","Expandable","children","_ref$state","_useState","useState","_useState2","slicedToArray","setCollapsed","Fragment","initialChance","ChanceToPlay","completelyRandom","chance","handleCheckboxChange","event","checked","_","updateChance","name","id","ChordInfo","rootNote","readableChord","note","translateFifth","translateSeventh","translateNinth","length","translateEleventh","translateThirteenth","generateRandomNumber","n","Math","floor","random","noPlay","ratio","every","generateTwo","_ratio","first","firstPartition","generateThree","_ratio2","second","sum","secondPartition","randomNumber","generateFifth","generateSeventh","generateNinth","randomOneOfFour","_ratio3","thirdPartition","generateFour","generateEleventh","generateThirteenth","chordCalculator","qualityRatios","chord","arguments","undefined","includes","minorThirdNoSharpedNinth","calculatedChord","keys","forEach","key","err","console","log","calculateNotesToPlay","generateRandomChord","fourthNoEleventh","flatFifthNoSharpedEleventh","augmentedFifthNoFlatThirteenth","sixthNoThirteenth","getReadableChord","output","root","App","setChance","_useState3","_useState4","setOutput","_useState5","_useState6","setQualityRatios","className","randomize","components_ChordInfo","components_Expandable","ChanceToPlay_ChanceToPlay","newChance","ChordQualities_ChordQualities","newQualities","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6fac6815.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  color: black;\n  background-color: white;\n\n  :disabled {\n    background-color: lightgrey;\n  }\n`;\n","import React from 'react';\nimport { StyledInput } from './styled/styled-inputs';\n\ninterface Props {\n  disabled?: boolean,\n  update(v: number): void,\n  value: number,\n};\n\nconst Input = (props: Props) => (\n  <StyledInput\n    disabled={props.disabled}\n    min='0'\n    max='100'\n    onChange={(e: React.ChangeEvent<HTMLInputElement>) => props.update(Number(e.target.value))}\n    step='1'\n    type='number'\n    value={props.value}\n  />\n);\nexport default Input;","import styled from 'styled-components';\n\nexport const ChanceTable = styled.table`\n  width: 100%;\n  margin: 10px;\n`;\n\nexport const ChanceRow = styled.tr`\n  width: 100%;\n `;\n\nexport const ChanceHeader = styled.h4`\n  font-weight: 100;\n  text-decoration: underline;\n  text-align: left;\n  margin: 10px;\n  margin-top: 20px;\n`;\n\nexport const SettingsBreak = styled.hr`\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  background-color: #282c34;\n  color: white;\n  cursor: pointer;\n  padding: 7px 10px;\n  width: max-content;\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  margin-bottom: 20px;\n  \n  :hover {\n    background-color: #383c44;\n  }\n`;\n\nexport const ExpandableButton = styled(StyledButton)`\n  width: calc(92% + 2px);\n  text-align: center;\n  margin-top: 20px;\n  margin-bottom: 0px;\n`;\n","import React from 'react';\nimport v4 from 'uuid/v4';\nimport Input from './Input';\nimport { ChanceRow } from './styled/styled-tables';\nimport { QualityRatios } from '../lib/types/chord-types';\nimport { StyledButton } from './styled/styled-buttons';\n\ninterface Props {\n  updateQualities(chordQualities: QualityRatios): void,\n};\n\ninterface State {\n  m3: number,\n  M3: number,\n  P4: number,\n  d5: number,\n  P5: number,\n  A5: number,\n  T6: number,\n  m7: number,\n  M7: number,\n  b9: number,\n  T9: number,\n  s9: number,\n  b9s9: number,\n  T11: number,\n  s11: number,\n  b13: number,\n  T13: number,\n  hash: string,\n};\n\nconst initialState: State = {\n  m3: 1,\n  M3: 1,\n  P4: 1,\n  d5: 1,\n  P5: 1,\n  A5: 1,\n  T6: 1,\n  m7: 1,\n  M7: 1,\n  b9: 1,\n  T9: 1,\n  s9: 1,\n  b9s9: 1,\n  T11: 1,\n  s11: 1,\n  b13: 1,\n  T13: 1,\n  hash: v4(),\n};\n\nexport default class ChordQualities extends React.Component<Props, State> {\n  state = initialState;\n\n  componentDidUpdate({ updateQualities }: Props, prevState: State) {\n    if (prevState.hash !== this.state.hash) {\n      const {\n        m3, M3, P4, d5, P5, A5, T6, m7, M7, b9, T9, s9, b9s9, T11, s11, b13, T13,\n      } = this.state;\n      updateQualities({\n        third: [m3, M3, P4],\n        fifth: [d5, P5, A5],\n        seventh: [T6, m7, M7],\n        ninth: [b9, T9, s9, b9s9],\n        eleventh: [T11, s11],\n        thirteenth: [b13, T13],\n      })\n    }\n  }\n\n  handleReset = () => {\n    this.setState(initialState);\n  };\n\n  render() {\n    const {\n      m3, M3, P4, d5, P5, A5, T6, m7, M7, b9, T9, s9, b9s9, T11, s11, b13, T13, hash,\n    } = this.state;\n    return (\n      <tbody>\n        <ChanceRow>\n          <td rowSpan={2}>3rd</td>\n          <td>-</td>\n          <td>M</td>\n          <td>4</td>\n          <td></td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <Input\n              value={m3}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                m3: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={M3}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                M3: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={P4}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                P4: v,\n              })}\n            />\n          </td>\n          <td>\n            <StyledButton\n              onClick={this.handleReset}\n            >\n              reset all ratios\n            </StyledButton>\n          </td>\n        </ChanceRow>\n        <ChanceRow>\n          <td rowSpan={2}>5th</td>\n          <td>b5</td>\n          <td>5</td>\n          <td>#5</td>\n          <td></td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <Input\n              value={d5}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                d5: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={P5}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                P5: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={A5}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                A5: v,\n              })}\n            />\n          </td>\n          <td></td>\n        </ChanceRow>  \n        <ChanceRow>\n          <td rowSpan={2}>7th</td>\n          <td>6</td>\n          <td>m7</td>\n          <td>M7</td>\n          <td></td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <Input\n              value={T6}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                T6: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={m7}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                m7: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={M7}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                M7: v,\n              })}\n            />\n          </td>\n          <td></td>\n        </ChanceRow>    \n        <ChanceRow>\n          <td rowSpan={2}>9th</td>\n          <td>b9</td>\n          <td>9</td>\n          <td>#9</td>\n          <td>b9 {'&'} #9</td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <Input\n              value={b9}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                b9: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={T9}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                T9: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={s9}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                s9: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={b9s9}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                b9s9: v,\n              })}\n            />\n          </td>\n        </ChanceRow>    \n        <ChanceRow>\n          <td rowSpan={2}>11th</td>\n          <td></td>\n          <td>11</td>\n          <td>#11</td>\n          <td></td>\n        </ChanceRow>\n        <ChanceRow>\n          <td></td>\n          <td>\n            <Input\n              value={T11}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                T11: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={s11}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                s11: v,\n              })}\n            />\n          </td>\n          <td></td>\n        </ChanceRow>    \n        <ChanceRow>\n          <td rowSpan={2}>13th</td>\n          <td>b13</td>\n          <td>13</td>\n          <td></td>\n          <td></td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <Input\n              value={b13}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                b13: v,\n              })}\n            />\n          </td>\n          <td>\n            <Input\n              value={T13}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                T13: v,\n              })}\n            />\n          </td>\n          <td></td>\n          <td></td>\n        </ChanceRow>\n      </tbody>\n    );\n  }\n}\n","import styled from 'styled-components'\n\ninterface Props {\n  collapsed: boolean,\n};\n\nexport const StyledExpandable = styled.div`\n  display: ${(props: Props) => props.collapsed ? 'none' : 'block'};\n  max-height: ${(props: Props) => props.collapsed ? '0' : '100%'};\n  overflow: hidden;\n  width: 92%;\n  margin-left: calc(4% - 1px);\n  border: 1px solid white;\n  border-top: 0;\n`;\n","import React, { FunctionComponent, useState } from 'react';\n\nimport { ExpandableButton } from './styled/styled-buttons';\nimport { StyledExpandable } from './styled/styled-expandable';\n\ninterface LocalState {\n  collapsed: boolean,\n};\n\ninterface State {\n  children?: any,\n  state?: LocalState,\n};\n\nconst initialState: LocalState = {\n  collapsed: true,\n};\n\nconst Expandable: FunctionComponent<State> = ({children, state = initialState}) => {\n  const [collapsed, setCollapsed] = useState(state.collapsed);\n\n  return (\n    <>\n      <ExpandableButton\n        onClick={() => setCollapsed(!collapsed)} \n      >\n        advanced: {collapsed ? 'expand' : 'collapse'}\n      </ExpandableButton>\n      <StyledExpandable collapsed={collapsed}>\n        {children}\n      </StyledExpandable>\n    </>\n  )\n}\n\nexport default Expandable;\n","import React from 'react';\nimport v4 from 'uuid/v4';\nimport Input from './Input';\nimport { ChanceOfPlaying } from '../lib/types/chord-types';\nimport { ChanceRow } from './styled/styled-tables';\n\ninterface Props {\n  updateChance(chance: ChanceOfPlaying | null): void,\n};\n\ninterface State {\n  completelyRandom: boolean,\n  chance: ChanceOfPlaying,\n  hash: string,\n};\n\nconst initialChance = {\n  fifth: 50,\n  seventh: 50,\n  ninth: 50,\n  eleventh: 50,\n  thirteenth: 50,\n};\n\nexport default class ChanceToPlay extends React.Component<Props, State> {\n  state = {\n    completelyRandom: true,\n    chance: initialChance,\n    hash: v4(),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    if (prevState.hash !== this.state.hash) {\n      if (this.state.completelyRandom) {\n        this.props.updateChance(null);\n      } else {\n        this.props.updateChance(this.state.chance);\n      }\n    }\n  }\n\n  handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    const { checked } = target;\n    this.setState({\n      ...this.state,\n      completelyRandom: checked,\n      hash: v4(),\n    });\n  };\n\n  render() {\n    return (\n      <tbody>\n        <ChanceRow>\n          <td></td>\n          <td>5th</td>\n          <td>7th</td>\n          <td>9th</td>\n          <td>11th</td>\n          <td>13th</td>\n        </ChanceRow>\n        <ChanceRow>\n          <td>\n            <label>\n              all random\n            <input\n                name='random'\n                id='random_id'\n                type='checkbox'\n                checked={this.state.completelyRandom}\n                onChange={(e) => this.handleCheckboxChange(e)}\n              />\n            </label>\n          </td>\n          <td>\n            <Input\n              disabled={this.state.completelyRandom}\n              value={this.state.chance.fifth}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                chance: {\n                  ...this.state.chance,\n                  fifth: v,\n                },\n              })}\n              />\n          </td>\n          <td>\n            <Input\n              disabled={this.state.completelyRandom}\n              value={this.state.chance.seventh}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                chance: {\n                  ...this.state.chance,\n                  seventh: v,\n                },\n              })}\n              />\n          </td>\n          <td>\n            <Input\n              disabled={this.state.completelyRandom}\n              value={this.state.chance.ninth}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                chance: {\n                  ...this.state.chance,\n                  ninth: v,\n                },\n              })}\n            /> \n          </td>\n          <td>\n            <Input\n              disabled={this.state.completelyRandom}\n              value={this.state.chance.eleventh}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                chance: {\n                  ...this.state.chance,\n                  eleventh: v,\n                },\n              })}\n              /> \n          </td>\n          <td>\n            <Input\n              disabled={this.state.completelyRandom}\n              value={this.state.chance.thirteenth}\n              update={(v: number) => this.setState({\n                ...this.state,\n                hash: v4(),\n                chance: {\n                  ...this.state.chance,\n                  thirteenth: v,\n                },\n              })}\n              /> \n          </td>\n        </ChanceRow>\n      </tbody>\n    );\n  }\n}\n","import React from 'react';\nimport { ReadableChord } from '../lib/types/chord-types';\nimport { ChanceRow } from './styled/styled-tables';\n\ninterface Props {\n  rootNote: string,\n  readableChord: ReadableChord,\n};\n\nconst ChordInfo = ({ rootNote, readableChord }: Props) => (\n  <tbody>\n    <ChanceRow>\n      <td>root</td>\n      <td>third</td>\n      <td>fifth</td>\n      <td>seventh</td>\n      <td>ninth</td>\n      <td>eleventh</td>\n      <td>thirteenth</td>\n    </ChanceRow>\n    <ChanceRow>\n      <td>{rootNote}</td>\n      <td>{readableChord.third}</td>\n      <td>{readableChord.fifth}</td>\n      <td>{readableChord.seventh}</td>\n      <td>{readableChord.ninth}</td>\n      <td>{readableChord.eleventh}</td>\n      <td>{readableChord.thirteenth}</td>\n    </ChanceRow>\n  </tbody>\n);\n\nexport default ChordInfo;\n\n","const note = ['A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab'];\nexport const getNote = (root: number) => note[root];\n\nexport const translateThird = (note: number) => {\n  if (note === 3) return '-';\n  if (note === 4) return 'M';\n  return '4';\n};\n\nexport const translateFifth = (note: number | null) => {\n  if (!note) return null;\n  if (note === 6) return 'b5';\n  if (note === 7) return '5';\n  return '+5';\n};\n\nexport const translateSeventh = (note: number | null) => {\n  if (!note) return null;\n  if (note === 9) return '6';\n  if (note === 10) return '-7';\n  return 'Maj7';\n};\n\nexport const translateNinth = (note: Array<number> | null) => {\n  if (!note) return null;\n  if (note.length === 2) return 'b9 & #9';\n  const ninth = note[0];\n  if (ninth === 13) return 'b9';\n  if (ninth === 14) return '9';\n  return '#9'\n};\n\nexport const translateEleventh = (note: number | null) => {\n  if (!note) return null;\n  if (note === 17) return '11';\n  return '#11';\n};\n\nexport const translateThirteenth = (note: number | null) => {\n  if (!note) return null;\n  if (note === 20) return 'b13';\n  return '13';\n};\n","import {\n  Chord,\n  TwoRatios,\n  ThreeRatios,\n  FourRatios,\n  QualityRatios,\n} from './types/chord-types';\n\nexport const generateRandomNumber = (n: number) => Math.floor(Math.random() * n);\n\nconst noPlay = (ratio: TwoRatios | ThreeRatios | FourRatios) => ratio.every(v => v === 0);\n\nconst generateTwo = (ratio: TwoRatios) => {\n  if (noPlay(ratio)) return generateRandomNumber(2);\n  const [first, second] = ratio;\n  const sum = first + second;\n  const firstPartition = first / sum;\n  const randomNumber = Math.random();\n  if (randomNumber > firstPartition) return 1;\n  return 0;\n};\n\nconst generateThree = (ratio: ThreeRatios) => {\n  if (noPlay(ratio)) return generateRandomNumber(3);\n  const [first, second, third] = ratio;\n  const sum = first + second + third;\n  const firstPartition = first / sum;\n  const secondPartition = firstPartition + (second / sum);\n  const randomNumber = Math.random();\n  if (randomNumber > secondPartition) return 2;\n  if (randomNumber > firstPartition) return 1;\n  return 0;\n};\n\nconst generateFour = (ratio: FourRatios) => {\n  if (noPlay(ratio)) return generateRandomNumber(4);\n  const [first, second, third, fourth] = ratio;\n  const sum = first + second + third + fourth;\n  const firstPartition = first / sum;\n  const secondPartition = firstPartition + (second / sum);\n  const thirdPartition = secondPartition + (third / sum);\n  const randomNumber = Math.random();\n  if (randomNumber > thirdPartition) return 3;\n  if (randomNumber > secondPartition) return 2;\n  if (randomNumber > firstPartition) return 1;\n  return 0;\n};\n\nconst generateThird = (ratio: ThreeRatios) => {\n   return 3 + generateThree(ratio)\n};\n\n\nconst generateFifth = (ratio: ThreeRatios) => {\n  return 6 + generateThree(ratio);\n};\n\nconst generateSeventh = (ratio: ThreeRatios) => {\n  return 9 + generateThree(ratio);\n};\n\nconst generateNinth = (ratio: FourRatios) => {\n  const randomOneOfFour = generateFour(ratio);\n  if (randomOneOfFour === 3) return [13, 15];\n  return [13 + randomOneOfFour];\n};\n\nconst generateEleventh = (ratio: TwoRatios) => {\n  return 17 + generateTwo(ratio);\n};\n\nconst generateThirteenth = (ratio: TwoRatios) => {\n  return 20 + generateTwo(ratio);\n};\n\nexport const generateRandomChord = ({\n  third, fifth, seventh, ninth, eleventh, thirteenth,\n}: QualityRatios) => {\n  const chord: Chord = {\n    third: generateThird(third),\n    fifth: generateFifth(fifth),\n    seventh: generateSeventh(seventh),\n    ninth: generateNinth(ninth),\n    eleventh: generateEleventh(eleventh),\n    thirteenth: generateThirteenth(thirteenth),\n  };\n  return chord;\n};\n","import {\n  generateRandomNumber,\n  generateRandomChord,\n} from './generate-chords';\n\nimport {\n  translateThird,\n  translateFifth,\n  translateSeventh,\n  translateNinth,\n  translateEleventh,\n  translateThirteenth,\n} from './translate-notes';\n\nimport {\n  Chord,\n  ChanceOfPlaying,\n  ChanceKeys,\n  FullChord,\n  ReadableChord,\n  QualityRatios,\n} from './types/chord-types';\n\nconst percentToDecimal = (input: number) => input / 100;\n\n// Chord logic\nconst minorThirdNoSharpedNinth = (chord: Chord): boolean =>\n  chord.third === 3 && !!chord.ninth && chord.ninth.includes(15);\n\nconst fourthNoEleventh = (chord: Chord): boolean =>\n  chord.third === 5 && chord.eleventh === 17;\n\nconst flatFifthNoSharpedEleventh = (chord: Chord): boolean =>\n  chord.fifth === 6 && chord.eleventh === 18;\n\nconst augmentedFifthNoFlatThirteenth = (chord: Chord): boolean =>\n  chord.fifth === 8 && chord.thirteenth === 20;\n\nconst sixthNoThirteenth = (chord: Chord): boolean =>\n  chord.seventh === 9 && chord.thirteenth === 21;\n\nconst doLogic = (chord: Chord): Chord => {\n  if (minorThirdNoSharpedNinth(chord)) chord.ninth = null;\n  if (fourthNoEleventh(chord)) chord.eleventh = null;\n  if (flatFifthNoSharpedEleventh(chord)) chord.eleventh = null;\n  if (augmentedFifthNoFlatThirteenth(chord)) chord.thirteenth = null;\n  if (sixthNoThirteenth(chord)) chord.thirteenth = null;\n  return chord;\n}\n\nconst calculateNotesToPlay = (chord: Chord, chance: ChanceOfPlaying): Chord => {\n  try {\n    const calculatedChord = {};\n    // @ts-ignore\n    calculatedChord.third = chord.third;\n    // @ts-ignore: ChanceKeys is not a 'string' (but it is a string enum, so this works)\n    Object.keys(chord).forEach((key: ChanceKeys) => {\n      if (key === 'third') return;\n      if (Math.random() > percentToDecimal(chance[key])) {\n        // @ts-ignore\n        calculatedChord[key] = null;\n      } else {\n        // @ts-ignore\n        calculatedChord[key] = chord[key];\n      }\n    })\n    // @ts-ignore: this is a runtime created object\n    return calculatedChord;\n  } catch (err) {\n    console.log(err);\n    return chord;\n  }\n};\n\nconst completelyRandom: ChanceOfPlaying  = {\n  fifth: generateRandomNumber(100),\n  seventh: generateRandomNumber(100),\n  ninth: generateRandomNumber(100),\n  eleventh: generateRandomNumber(100),\n  thirteenth: generateRandomNumber(100),\n};\n\nexport const generateRoot = () => generateRandomNumber(12);\n\nexport const chordCalculator = (qualityRatios: QualityRatios, chance = completelyRandom): Chord =>\n  doLogic(calculateNotesToPlay(generateRandomChord(qualityRatios), chance));\n\nexport const calculateChordRelativeToRoot = (root: number, chord: Chord): FullChord => ({\n  root,\n  third: chord.third + root,\n  fifth: chord.fifth ? chord.fifth + root : null,\n  seventh: chord.seventh ? chord.seventh + root : null,\n  ninth: chord.ninth ? chord.ninth.map(v => v + root) : null,\n  eleventh: chord.eleventh ? chord.eleventh + root : null,\n  thirteenth: chord.thirteenth ? chord.thirteenth + root : null,\n});\n\nexport const getReadableChord = (chord: Chord): ReadableChord => ({\n  third: translateThird(chord.third),\n  fifth: translateFifth(chord.fifth),\n  seventh: translateSeventh(chord.seventh),\n  ninth: translateNinth(chord.ninth),\n  eleventh: translateEleventh(chord.eleventh),\n  thirteenth: translateThirteenth(chord.thirteenth),\n});\n","import React, { FunctionComponent, useState } from 'react';\nimport './App.css';\n\nimport ChordQualities from './components/ChordQualities';\nimport Expandable from './components/Expandable';\nimport ChanceToPlay from './components/ChanceToPlay';\nimport ChordInfo from './components/ChordInfo';\n\nimport { ChanceTable, ChanceHeader, SettingsBreak } from './components/styled/styled-tables';\nimport { StyledButton } from './components/styled/styled-buttons';\n\nimport { getNote } from './lib/translate-notes';\n\nimport {\n  chordCalculator,\n  generateRoot,\n  getReadableChord,\n} from './lib/chord-calculator';\n\nimport {\n  ChanceOfPlaying,\n  ReadableChord,\n  QualityRatios\n} from './lib/types/chord-types';\n\n\ninterface ChordOutput {\n  root: string,\n  chord: ReadableChord,\n};\n\ntype Chance = ChanceOfPlaying | null;\n\ninterface State {\n  chance: Chance,\n  output: ChordOutput,\n  qualityRatios: QualityRatios,\n};\n\nconst initialChord: ReadableChord = {\n  third: '',\n  fifth: null,\n  seventh: null,\n  ninth: null,\n  eleventh: null,\n  thirteenth: null,\n};\n\nconst initialOutput: ChordOutput = {\n  root: '',\n  chord: initialChord,\n};\n\nconst initialQualityRatios: QualityRatios = {\n  third: [1, 1, 1],\n  fifth: [1, 1, 1],\n  seventh: [1, 1, 1],\n  ninth: [1, 1, 1, 1],\n  eleventh: [1, 1],\n  thirteenth: [1, 1],\n};\n\nconst initialState: State = {\n  chance: null,\n  output: initialOutput,\n  qualityRatios: initialQualityRatios,\n};\n\nconst randomize = (qualityRatios: QualityRatios, chance: ChanceOfPlaying | null): ChordOutput => ({\n  root: getNote(generateRoot()),\n  chord: getReadableChord(chordCalculator(qualityRatios, chance || undefined)),\n});\n\nconst App: FunctionComponent<{state?: State}> = ({ state = initialState }) => {\n  const [chance, setChance] = useState(state.chance);\n  const [output, setOutput] = useState(state.output);\n  const [qualityRatios, setQualityRatios] = useState(state.qualityRatios);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>random chord generator</h1>\n      </header>\n      <main>\n        <StyledButton\n          onClick={() => setOutput(randomize(qualityRatios, chance))}\n        >\n          generate a random chord\n        </StyledButton>\n        <ChanceTable>\n          <ChordInfo\n            readableChord={output.chord}\n            rootNote={output.root}\n          />\n        </ChanceTable>\n        <Expandable>\n          <ChanceHeader>chance to play</ChanceHeader>\n          <ChanceTable>\n            <ChanceToPlay\n              updateChance={(newChance: ChanceOfPlaying) => setChance(newChance)}\n            />\n          </ChanceTable>\n          <SettingsBreak/>\n          <ChanceHeader>quality probability ratios</ChanceHeader>\n          <ChanceTable>\n            <ChordQualities\n              updateQualities={(newQualities: QualityRatios) => setQualityRatios(newQualities)}\n            />\n          </ChanceTable>\n        </Expandable>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}